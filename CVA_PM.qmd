---
title: "CVA_PM"
subtitle: |
  User-friendly biplots in R <br><br><br><br>
  Centre for Multi-Dimensional Data Visualisation (MuViSU) <br>
  muvisu@sun.ac.za<br><br><br><br>
  **SASA 2024**
format: 
  revealjs:
    self-contained: true
    theme: [serif, MDAG_biplotEZ.scss]
    slide-number: true
    logo: logo.png
    footer: <a href="https://github.com/MuViSU/SASA2024_MDAG" target="_blank">https://github.com/MuViSU/SASA2024_MDAG</a>
    bibliography: references.bib
title-slide-attributes: 
    data-background-color: rgb(255,255,255)
    data-background-image: "./photos/SU_vertical.jpg"
    data-background-size: 15%
    data-background-opacity: "0.9"
    data-background-position: 15% 90%
editor: 
  markdown: 
    wrap: 72
---

```{r setup}
#| include: false

library(knitr)
options(htmltools.dir.version = FALSE, tibble.width = 45)
opts_chunk$set(
  echo = TRUE, 
  warning = FALSE, 
  message = FALSE, 
  error=FALSE, 
  comment = "#",
  fig.align = 'center', 
  fig.retina = 5,
  out.width = "80%",
  fig.show = 'hold',
  cache = FALSE
)

# libraries
library(biplotEZ)
library(r2resize)
library(tibble)
r2resize::add.resizer(
  theme.color = "black",
  position = "top",
  font.size = "12px",
  font.color = "darkblue",
  tables = TRUE,
  images = TRUE,
  line.color = "orange",
  line.width = 150,
  default.image.width="40%"
)
```

## Canonical Variate Analysisv (CVA) biplot

::: fragment
**Aim**: Dimension reduction technique that maximises variation between
classes while minimising within class variation.
:::

::: fragment
This is achieved by the following tasks:
::: 

::: fragment
-   Decomposing Variance
-   Find a linear mapping to canonical space.
-   Find a low dimensional approximation
:::
## Variance Decomposition
::: fragment
The classical variance decomposition
$$\mathbf{T}=\mathbf{B}+\mathbf{W},$$
::: 
::: fragment
has as an analogy in this setting
$$
\mathbf{X'X} = \mathbf{\bar{\mathbf{X}}'C \bar{\mathbf{X}}} + \mathbf{X' [I - G(G'G)^{-1}C(G'G)^{-1}G'] X}.
$$
:::
::: fragment
The choice of $\mathbf{C}$ determines the variant of CVA:
::: 
::: fragment
- Weighted: $\mathbf{C}=\mathbf{N}=\mathbf{G'G}$
- Unweighted: $\mathbf{C}=\mathbf{I}_G - G^{-1}\mathbf{1}_G\mathbf{1}_G'$
- Unweighted \\w weighted centroid: $\mathbf{C}=\mathbf{I}_G$
:::

## Linear Mapping
::: fragment
Find a linear mapping

$$\mathbf{Y}=\mathbf{X}\mathbf{M}, \tag{1}$$
:::
::: fragment
such that $$\frac{\mathbf{m}'\mathbf{B}\mathbf{m}}{\mathbf{m}'\mathbf{W}\mathbf{m}} \tag{2}$$ is maximised s.t. $\mathbf{m}'\mathbf{W}\mathbf{m}=1$.
:::

::: fragment
It can be shown that this leads to the following equivalent eigen equations:

$$
\mathbf{W}^{-1}\mathbf{BM} = \mathbf{M \Lambda} \tag{3}
$$

$$
\mathbf{BM} = \mathbf{WM \Lambda} \tag{4}
$$

$$
(\mathbf{W}^{-\frac{1}{2}} \mathbf{B} \mathbf{W}^{-\frac{1}{2}}) \mathbf{M} = (\mathbf{W}^{-\frac{1}{2}} \mathbf{M}) \mathbf{\Lambda} \tag{5}
$$

with $\mathbf{M'BM}= \mathbf{\Lambda}$ and $\mathbf{M'WM}= \mathbf{I}$.
:::

::: fragment
Since the matrix $\mathbf{W}^{-\frac{1}{2}} \mathbf{B} \mathbf{W}^{-\frac{1}{2}}$ is symmetric and positive semi-definite the eigenvalues 
in the matrix $\mathbf{\Lambda}$ are positive and ordered. The rank of $\mathbf{B} = min(p, G-1)$ so that only the first $rank(\mathbf{B})$ 
eigenvalues are non-zero. We form the canonical variates with the transformation

$$
\bar{\mathbf{Y}} = \bar{\mathbf{X}}\mathbf{M}.\tag{5}
$$
:::

## Low dimensional approximation
::: fragment
The first two canonical variates are given by:

$$\mathbf{\bar{Z}}=\mathbf{\bar{Y}}\mathbf{J}_2=\mathbf{\bar{X}}\mathbf{M}\mathbf{J}_2 \tag{6}$$ where $\mathbf{J'}_2=[\mathbf{I}_2 \quad \mathbf{0}]$. We add the individual sample points with the same transformation
$$\mathbf{Z}=\mathbf{X}\mathbf{M}\mathbf{J}_2. \tag{7}$$
:::
::: fragment
A new sample point, $\mathbf{x}^*$, can be added by interpolation 
$$\mathbf{z}^*=\mathbf{x}^*\mathbf{M}\mathbf{J}_2.\tag{8}$$
:::

## `CVA` function

::: fragment
```{r, echo = TRUE, eval = FALSE}
CVA()
```
:::

::: fragment
| Argument           | Description                                                                                                                                                                           |
|---------------------|---------------------------------------------------|
| `bp`               | Object of class [biplot]{style="font-family: 'Noto Sans Mono', monospace"}.                                                                                                           |
| `classes`          | Vector of class membership. User specified, otherwise defaults to vector specified in `biplot`.                                                                                       |
| `dim.biplot`       | Dimension of the biplot. Only values 1, 2 and 3 are accepted, with default `2`.                                                                                                       |
| `e.vects`          | Which eigenvectors (principal components) to extract, with default `1:dim.biplot`.                                                                                                    |
| `weightedCVA`      | "weighted" or "unweightedCent" or "unweightedI": Controls which type of CVA to perform, with default `"weighted"`                                                                     |
| `show.class.means` | TRUE or FALSE: Controls whether class means are plotted, with default `TRUE`.                                                                                                         |
| `low.dim`          | `"sample.opt"` or `"Bhattacharyya.dist"`: Controls method of constructing additional dimension(s) if `dim.biplot` is greater than the number of classes, with default `"sample.opt"`. |

: {tbl-colwidths="\[25,75\]"}
:::

## The function fit.measures()

::: fragment
```{r Using the fit.measures() function}
bp <- biplot(state.x77) |> CVA(classes = state.region) |> fit.measures()
```
:::

::: fragment
Contains the following information on how well the biplot represents the information of the original and canonical space:

- `quality`: Quality of fit for canonical and original variables
- `adequacy`: Adequacy of original variables
- `axis.predictivity`: Axis predictivity
- `within.class.axis.predictivity`: Class predictivity
- `within.class.sample.predictivity`: Sample predictivity

:::

## The function summary()

::: fragment
The `summary()` function prints to screen the `fit.measures` stored in the object of class [biplot]{style="font-family: 'Noto Sans Mono', monospace"}.
:::


::: fragment
```{r Using the summary() function }
bp |> summary()
```
:::

## The functions rotate()

::: fragment
The `rotate()` function rotates the samples and axes in the [biplot]{style="font-family: 'Noto Sans Mono', monospace"} by `rotate.degrees` degrees.
:::

::: fragment
```{r Using the rotate() function}
par(mfrow=c(1,2))
bp |> plot()
bp |> rotate(rotate.degrees=90)|> plot()
```
:::



## The functions reflect()

::: fragment
The `reflect()` function reflects the samples and axes in the [biplot]{style="font-family: 'Noto Sans Mono', monospace"} along an axis, `x`(horisontal reflection), `y` (vertical reflection) or `xy` (diagonal reflection).
:::

::: fragment
```{r Using the reflect() function}
par(mfrow=c(1,2))
bp |> plot()
bp |> reflect(reflect.axis ="y")|> plot()
```
:::

## The argument zoom=TRUE in plot()

::: fragment
The argument `zoom=` is `FALSE` by default. If `zoom=TRUE` a new graphical device is launched. The user is prompted to click on the desired upper left hand and lower right hand corners of the zoomed in plot. 
:::

::: fragment
```{r Using the zoom argument in plot(), echo=TRUE, eval=FALSE}
bp |>  plot(zoom=TRUE)
```
:::

## 1 Dimensional biplot CVA of state.x77 data

::: fragment
```{r One dimensional CVA biplot}
biplot(state.x77,classes=state.region) |> CVA(dim.biplot=1) |> classify() |> plot()
```
:::

## 1 Dimensional biplot PCA of iris data

::: fragment
```{r One dimensional PCA biplot}
biplot(iris,group.aes=iris$Species) |> PCA(dim.biplot=1) |> density1D() |> ellipses() |> plot()
```
:::
